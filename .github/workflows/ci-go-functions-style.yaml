#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: CI - Go Functions style check
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - branch-*

env:
  MAVEN_OPTS: -Xmx1024m -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3

jobs:
  changed_files_job:
    name: 'Changed files check'
    runs-on: ubuntu-20.04
    outputs:
      changes_outcome: ${{ steps.changes.outcome }}
      has_source_files: ${{ steps.changes.outputs.src }}
    steps:
      - id: changes
        uses: dorny/paths-filter@v2
        # ignore failures until https://github.com/dorny/paths-filter/issues/73 is fixed
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            src:
              # pattern syntax uses https://github.com/micromatch/picomatch
              - .github/workflows/**
              - pulsar-function-go/**'

  check-style:
    needs: changed_files_job
    if: needs.changed_files_job.outputs.changes_outcome=='failure' || needs.changed_files_job.outputs.has_source_files == 'true'
    name: Go ${{ matrix.go-version }} Functions style check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go-version: [1.11, 1.12, 1.13, 1.14]

    steps:
      - name: Checkout pull request HEAD commit
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout pushed commit on branch
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: InstallTool
        run: |
          cd pulsar-function-go
          wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s v1.18.0
          ./bin/golangci-lint --version

      - name: Build
        run: |
          cd pulsar-function-go
          go build ./...

      - name: CheckStyle
        run: |
          cd pulsar-function-go
          ./bin/golangci-lint run -c ./golangci.yml ./pf
